package DZ5;

public class Main {
    public static void main(String[] args) {
        int numPhilosophers = 5;
        int howManyTimesShouldIEat = 3;
        Philosopher[] philosophers = new Philosopher[numPhilosophers];
        Fork[] forks = new Fork[numPhilosophers];
        Thread[] threads = new Thread[numPhilosophers];

        for (int i = 0; i < numPhilosophers; i++) {
            forks[i] = new Fork(i);
        }

        for (int i = 0; i < numPhilosophers; i++) {
            Fork leftFork = forks[i];
            Fork rightFork = forks[(i + 1) % numPhilosophers];
            philosophers[i] = new Philosopher(i, leftFork, rightFork, howManyTimesShouldIEat);
            threads[i] = new Thread(philosophers[i]);
            threads[i].start();
        }


        try {
            for (int i = 0; i < numPhilosophers; i++) {
                threads[i].join();
                if (!threads[i].isAlive()) {
                    System.out.println("\n Философ " + i + " покушал " + howManyTimesShouldIEat + " раз(а) и наелся !) \n");
                }
            }
            System.out.println("\n Все Философы наелись!) \n");
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

    }
}
/*
Философ 0 думает.
Философ 1 думает.
Философ 2 думает.
Философ 4 думает.
Философ 3 думает.
Философ 2 взял левую вилку 2
Философ 2 взял правую вилку 3
Философ 2 кушает.
Философ 0 взял левую вилку 0
Философ 0 взял правую вилку 1
Философ 0 кушает.
Философ 2 положил вилки 2 и 3
Философ 2 думает.
Философ 4 взял левую вилку 4
Философ 0 положил вилки 0 и 1
Философ 0 думает.
Философ 1 взял левую вилку 1
Философ 1 взял правую вилку 2
Философ 4 взял правую вилку 0
Философ 4 кушает.
Философ 1 кушает.
Философ 3 взял левую вилку 3
Философ 4 положил вилки 4 и 0
Философ 4 думает.
Философ 3 взял правую вилку 4
Философ 3 кушает.
Философ 3 положил вилки 3 и 4
Философ 3 думает.
Философ 3 взял левую вилку 3
Философ 3 взял правую вилку 4
Философ 3 кушает.
Философ 0 взял левую вилку 0
Философ 3 положил вилки 3 и 4
Философ 1 положил вилки 1 и 2
Философ 4 взял левую вилку 4
Философ 3 думает.
Философ 1 думает.
Философ 0 взял правую вилку 1
Философ 2 взял левую вилку 2
Философ 0 кушает.
Философ 2 взял правую вилку 3
Философ 2 кушает.
Философ 2 положил вилки 2 и 3
Философ 2 думает.
Философ 0 положил вилки 0 и 1
Философ 0 думает.
Философ 1 взял левую вилку 1
Философ 1 взял правую вилку 2
Философ 4 взял правую вилку 0
Философ 4 кушает.
Философ 1 кушает.
Философ 4 положил вилки 4 и 0
Философ 4 думает.
Философ 3 взял левую вилку 3
Философ 3 взял правую вилку 4
Философ 3 кушает.
Философ 3 положил вилки 3 и 4
Философ 4 взял левую вилку 4
Философ 4 взял правую вилку 0
Философ 4 кушает.
Философ 1 положил вилки 1 и 2
Философ 1 думает.
Философ 2 взял левую вилку 2
Философ 2 взял правую вилку 3
Философ 2 кушает.
Философ 1 взял левую вилку 1
Философ 4 положил вилки 4 и 0
Философ 0 взял левую вилку 0
Философ 2 положил вилки 2 и 3
Философ 1 взял правую вилку 2
Философ 1 кушает.
Философ 1 положил вилки 1 и 2
Философ 0 взял правую вилку 1
Философ 0 кушает.
Философ 0 положил вилки 0 и 1

 Философ 0 покушал 3 раз(а) и наелся !)


 Философ 1 покушал 3 раз(а) и наелся !)


 Философ 2 покушал 3 раз(а) и наелся !)


 Философ 3 покушал 3 раз(а) и наелся !)


 Философ 4 покушал 3 раз(а) и наелся !)


 Все Философы наелись!)


Process finished with exit code 0
 */
